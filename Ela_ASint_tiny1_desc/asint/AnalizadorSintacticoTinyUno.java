/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoTinyUno.java */
package asint;

public class AnalizadorSintacticoTinyUno implements AnalizadorSintacticoTinyUnoConstants {

  final public void Sp() throws ParseException {
    Programa();
    jj_consume_token(0);
  }

  final public void Programa() throws ParseException {
    Decs();
    Insts();
  }

  final public void Decs() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Proc:
    case Var:
    case Type:
      LDecs();
      jj_consume_token(44);
      break;
    default:
      jj_la1[0] = jj_gen;

    }
  }

  final public void LDecs() throws ParseException {
    Dec();
    RLDecs();
  }

  final public void RLDecs() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 45:
      jj_consume_token(45);
      Dec();
      RLDecs();
      break;
    default:
      jj_la1[1] = jj_gen;

    }
  }

  final public void Dec() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Var:
      jj_consume_token(Var);
      TypN();
      jj_consume_token(Identificador);
      break;
    case Type:
      jj_consume_token(Type);
      TypN();
      jj_consume_token(Identificador);
      break;
    case Proc:
      jj_consume_token(Proc);
      jj_consume_token(Identificador);
      ParamsF();
      Bloq();
      break;
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void ParamsF() throws ParseException {
    jj_consume_token(46);
    LParamFOpc();
    jj_consume_token(47);
  }

  final public void LParamFOpc() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Int:
    case Realw:
    case Bool:
    case String:
    case Record:
    case Array:
    case Pointer:
    case Identificador:
      LParamF();
      break;
    default:
      jj_la1[3] = jj_gen;

    }
  }

  final public void LParamF() throws ParseException {
    ParamF();
    RLParamF();
  }

  final public void RLParamF() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 48:
      jj_consume_token(48);
      ParamF();
      RLParamF();
      break;
    default:
      jj_la1[4] = jj_gen;

    }
  }

  final public void ParamF() throws ParseException {
    TypN();
    RParamF();
  }

  final public void RParamF() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Identificador:
      jj_consume_token(Identificador);
      break;
    case 49:
      jj_consume_token(49);
      jj_consume_token(Identificador);
      break;
    default:
      jj_la1[5] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void TypN() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Int:
    case Realw:
    case Bool:
    case String:
    case Identificador:
      BaseType();
      break;
    case Array:
      jj_consume_token(Array);
      jj_consume_token(50);
      jj_consume_token(LitEnt);
      jj_consume_token(51);
      jj_consume_token(Of);
      BaseType();
      break;
    case Record:
      jj_consume_token(Record);
      jj_consume_token(52);
      LCampos();
      jj_consume_token(53);
      break;
    case Pointer:
      jj_consume_token(Pointer);
      BaseType();
      break;
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void LCampos() throws ParseException {
    Campo();
    RLCampos();
  }

  final public void RLCampos() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 45:
      jj_consume_token(45);
      Campo();
      RLCampos();
      break;
    default:
      jj_la1[7] = jj_gen;

    }
  }

  final public void Campo() throws ParseException {
    TypN();
    jj_consume_token(Identificador);
  }

  final public void BaseType() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Int:
    case Realw:
    case Bool:
    case String:
      BasicType();
      break;
    case Identificador:
      jj_consume_token(Identificador);
      break;
    default:
      jj_la1[8] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void BasicType() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Int:
      jj_consume_token(Int);
      break;
    case Realw:
      jj_consume_token(Realw);
      break;
    case Bool:
      jj_consume_token(Bool);
      break;
    case String:
      jj_consume_token(String);
      break;
    default:
      jj_la1[9] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Insts() throws ParseException {
    Inst();
    RInsts();
  }

  final public void RInsts() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 45:
      jj_consume_token(45);
      Inst();
      RInsts();
      break;
    default:
      jj_la1[10] = jj_gen;

    }
  }

  final public void Inst() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Null:
    case Identificador:
    case LitEnt:
    case LitReal:
    case LitCad:
    case 46:
    case 56:
    case 63:
      E0();
      jj_consume_token(54);
      E0();
      break;
    case If:
      jj_consume_token(If);
      E0();
      jj_consume_token(Then);
      LInsts();
      RInst();
      break;
    case While:
      jj_consume_token(While);
      E0();
      jj_consume_token(Do);
      LInsts();
      jj_consume_token(Endwhile);
      break;
    case Read:
      jj_consume_token(Read);
      E0();
      break;
    case Write:
      jj_consume_token(Write);
      E0();
      break;
    case Nl:
      jj_consume_token(Nl);
      break;
    case New:
      jj_consume_token(New);
      E0();
      break;
    case Delete:
      jj_consume_token(Delete);
      E0();
      break;
    case Call:
      jj_consume_token(Call);
      jj_consume_token(Identificador);
      ParamsR();
      break;
    case 52:
      Bloq();
      break;
    default:
      jj_la1[11] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void RInst() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Endif:
      jj_consume_token(Endif);
      break;
    case Else:
      jj_consume_token(Else);
      LInsts();
      jj_consume_token(Endif);
      break;
    default:
      jj_la1[12] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void LInsts() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Null:
    case If:
    case While:
    case Call:
    case New:
    case Delete:
    case Read:
    case Write:
    case Nl:
    case Identificador:
    case LitEnt:
    case LitReal:
    case LitCad:
    case 46:
    case 52:
    case 56:
    case 63:
      Insts();
      break;
    default:
      jj_la1[13] = jj_gen;

    }
  }

  final public void ParamsR() throws ParseException {
    jj_consume_token(46);
    LParamROpc();
    jj_consume_token(47);
  }

  final public void LParamROpc() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Null:
    case Identificador:
    case LitEnt:
    case LitReal:
    case LitCad:
    case 46:
    case 56:
    case 63:
      LParamR();
      break;
    default:
      jj_la1[14] = jj_gen;

    }
  }

  final public void LParamR() throws ParseException {
    E0();
    RLParamR();
  }

  final public void RLParamR() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 48:
      jj_consume_token(48);
      E0();
      RLParamR();
      break;
    default:
      jj_la1[15] = jj_gen;

    }
  }

  final public void Bloq() throws ParseException {
    jj_consume_token(52);
    BloqOpc();
    jj_consume_token(53);
  }

  final public void BloqOpc() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Null:
    case Proc:
    case If:
    case While:
    case Call:
    case New:
    case Delete:
    case Read:
    case Write:
    case Nl:
    case Var:
    case Type:
    case Identificador:
    case LitEnt:
    case LitReal:
    case LitCad:
    case 46:
    case 52:
    case 56:
    case 63:
      Programa();
      break;
    default:
      jj_la1[16] = jj_gen;

    }
  }

  final public void E0() throws ParseException {
    E1();
    RE0();
  }

  final public void RE0() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
      OpIn0AsocD();
      E0();
      break;
    case 56:
      OpIn0NoAsoc();
      E1();
      break;
    default:
      jj_la1[17] = jj_gen;

    }
  }

  final public void E1() throws ParseException {
    E2();
    RE1();
  }

  final public void RE1() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case And:
    case Or:
      OpIn1AsocI();
      E2();
      RE1();
      break;
    default:
      jj_la1[18] = jj_gen;

    }
  }

  final public void E2() throws ParseException {
    E3();
    RE2();
  }

  final public void RE2() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
      OpIn2AsocI();
      E3();
      RE2();
      break;
    default:
      jj_la1[19] = jj_gen;

    }
  }

  final public void E3() throws ParseException {
    E4();
    RE3();
  }

  final public void RE3() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 63:
    case 64:
    case 65:
      OpIn3NoAsoc();
      E4();
      break;
    default:
      jj_la1[20] = jj_gen;

    }
  }

  final public void E4() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
      OpPre4Asoc();
      E4();
      break;
    case 56:
      OpPre4NoAsoc();
      E5();
      break;
    case True:
    case False:
    case Null:
    case Identificador:
    case LitEnt:
    case LitReal:
    case LitCad:
    case 46:
    case 63:
      E5();
      break;
    default:
      jj_la1[21] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E5() throws ParseException {
    E6();
    RE5();
  }

  final public void RE5() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 50:
    case 66:
    case 67:
      OpPos5Asoc();
      RE5();
      break;
    default:
      jj_la1[22] = jj_gen;

    }
  }

  final public void E6() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 63:
      OpPre6Asoc();
      E6();
      break;
    case True:
    case False:
    case Null:
    case Identificador:
    case LitEnt:
    case LitReal:
    case LitCad:
    case 46:
      E7();
      break;
    default:
      jj_la1[23] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E7() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 46:
      jj_consume_token(46);
      E0();
      jj_consume_token(47);
      break;
    case LitEnt:
      jj_consume_token(LitEnt);
      break;
    case LitReal:
      jj_consume_token(LitReal);
      break;
    case LitCad:
      jj_consume_token(LitCad);
      break;
    case True:
      jj_consume_token(True);
      break;
    case False:
      jj_consume_token(False);
      break;
    case Identificador:
      jj_consume_token(Identificador);
      break;
    case Null:
      jj_consume_token(Null);
      break;
    default:
      jj_la1[24] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpIn0AsocD() throws ParseException {
    jj_consume_token(55);
  }

  final public void OpIn0NoAsoc() throws ParseException {
    jj_consume_token(56);
  }

  final public void OpIn1AsocI() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case And:
      jj_consume_token(And);
      break;
    case Or:
      jj_consume_token(Or);
      break;
    default:
      jj_la1[25] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpIn2AsocI() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 57:
      jj_consume_token(57);
      break;
    case 58:
      jj_consume_token(58);
      break;
    case 59:
      jj_consume_token(59);
      break;
    case 60:
      jj_consume_token(60);
      break;
    case 61:
      jj_consume_token(61);
      break;
    case 62:
      jj_consume_token(62);
      break;
    default:
      jj_la1[26] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpIn3NoAsoc() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 63:
      jj_consume_token(63);
      break;
    case 64:
      jj_consume_token(64);
      break;
    case 65:
      jj_consume_token(65);
      break;
    default:
      jj_la1[27] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpPre4NoAsoc() throws ParseException {
    jj_consume_token(56);
  }

  final public void OpPre4Asoc() throws ParseException {
    jj_consume_token(Not);
  }

  final public void OpPos5Asoc() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 50:
      jj_consume_token(50);
      E0();
      jj_consume_token(51);
      break;
    case 66:
      jj_consume_token(66);
      jj_consume_token(Identificador);
      break;
    case 67:
      jj_consume_token(67);
      jj_consume_token(Identificador);
      break;
    default:
      jj_la1[28] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpPre6Asoc() throws ParseException {
    jj_consume_token(63);
  }

  public AnalizadorSintacticoTinyUnoTokenManager token_source;
  SimpleCharStream jj_input_stream;
  public Token token, jj_nt;
  private int jj_ntk;
  private int jj_gen;
  final private int[] jj_la1 = new int[29];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_0();
      jj_la1_1();
      jj_la1_2();
   }
   private static void jj_la1_0() {
      jj_la1_0 = new int[] {0x100000,0x0,0x100000,0x6004e000,0x0,0x0,0x6004e000,0x0,0x4e000,0x4e000,0x0,0x122b0400,0x1800000,0x122b0400,0xb0400,0x0,0x123b0400,0x0,0x1800,0x0,0x0,0xb0400,0x0,0xb0000,0xb0000,0x1800,0x0,0x0,0x0,};
   }
   private static void jj_la1_1() {
      jj_la1_1 = new int[] {0xc0,0x2000,0xc0,0x101,0x10000,0x20100,0x101,0x2000,0x100,0x0,0x2000,0x81104f3e,0x0,0x81104f3e,0x81004f00,0x10000,0x81104ffe,0x1800000,0x0,0x7e000000,0x80000000,0x81004f00,0x40000,0x80004f00,0x4f00,0x0,0x7e000000,0x80000000,0x40000,};
   }
   private static void jj_la1_2() {
      jj_la1_2 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x0,0xc,0x0,0x0,0x0,0x0,0x3,0xc,};
   }

  public AnalizadorSintacticoTinyUno(java.io.InputStream stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTinyUnoTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.InputStream stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTinyUno(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTinyUnoTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTinyUno(AnalizadorSintacticoTinyUnoTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public void ReInit(AnalizadorSintacticoTinyUnoTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  final private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  final private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.Vector jj_expentries = new java.util.Vector();
  private int[] jj_expentry;
  private int jj_kind = -1;

  public ParseException generateParseException() {
    jj_expentries.removeAllElements();
    boolean[] la1tokens = new boolean[68];
    for (int i = 0; i < 68; i++) {
      la1tokens[i] = false;
    }
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 29; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 68; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.addElement(jj_expentry);
      }
    }
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = (int[])jj_expentries.elementAt(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  final public void enable_tracing() {
  }

  final public void disable_tracing() {
  }

                                          }
